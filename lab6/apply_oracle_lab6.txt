SQL> 
SQL> -- Set the page size.
SQL> SET ECHO ON
SQL> SET PAGESIZE 999
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #1 : Add two columns to the RENTAL_ITEM table.
SQL> -- ----------------------------------------------------------------------
SQL> SELECT  'Step #1' AS "Step Number" FROM dual;

Step Nu                                                                         
-------                                                                         
Step #1                                                                         

1 row selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Objective #1: Add the RENTAL_ITEM_PRICE and RENTAL_ITEM_TYPE columns
SQL> -- 	       to the RENTAL_ITEM table. Both columns should use a
SQL> -- 	       NUMBER data type in Oracle, and an int unsigned data
SQL> -- 	       type.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> -- --------------------------------------------------
SQL> --  Step 1: Write the ALTER statement.
SQL> -- --------------------------------------------------
SQL> 
SQL> ---*****Addition by the student
SQL> ALTER TABLE     rental_item
  2  ADD	     rental_item_price NUMBER
  3  ADD	     rental_item_type  NUMBER
  4  ADD CONSTRAINT  fk_rental_item_5 FOREIGN KEY (rental_item_type) REFERENCES common_lookup (common_lookup_id);

Table altered.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #1: Verify the table structure.
SQL> -- ----------------------------------------------------------------------
SQL> SET NULL ''
SQL> COLUMN table_name	 FORMAT A14
SQL> COLUMN column_id	 FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type	 FORMAT A12
SQL> SELECT   table_name
  2  ,	      column_id
  3  ,	      column_name
  4  ,	      CASE
  5  		WHEN nullable = 'N' THEN 'NOT NULL'
  6  		ELSE ''
  7  	      END AS nullable
  8  ,	      CASE
  9  		WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10  		  data_type||'('||data_length||')'
 11  		ELSE
 12  		  data_type
 13  	      END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = 'RENTAL_ITEM'
 16  ORDER BY 2;

                         Column                                                 
Table Name     COLUMN_ID Name                   NULLABLE DATA_TYPE              
-------------- --------- ---------------------- -------- ------------           
RENTAL_ITEM            1 RENTAL_ITEM_ID         NOT NULL NUMBER(22)             
RENTAL_ITEM            2 RENTAL_ID              NOT NULL NUMBER(22)             
RENTAL_ITEM            3 ITEM_ID                NOT NULL NUMBER(22)             
RENTAL_ITEM            4 CREATED_BY             NOT NULL NUMBER(22)             
RENTAL_ITEM            5 CREATION_DATE          NOT NULL DATE                   
RENTAL_ITEM            6 LAST_UPDATED_BY        NOT NULL NUMBER(22)             
RENTAL_ITEM            7 LAST_UPDATE_DATE       NOT NULL DATE                   
RENTAL_ITEM            8 RENTAL_ITEM_PRICE               NUMBER(22)             
RENTAL_ITEM            9 RENTAL_ITEM_TYPE                NUMBER(22)             

9 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #2 : Create the PRICE table.
SQL> -- ----------------------------------------------------------------------
SQL> -- ----------------------------------------------------------------------
SQL> --  Objective #1: Conditionally drop a PRICE table before creating a
SQL> -- 	       PRICE table and PRICE_S1 sequence.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> -- Conditionally drop PRICE table and sequence.
SQL> BEGIN
  2    FOR i IN (SELECT null
  3  		 FROM	user_tables
  4  		 WHERE	table_name = 'PRICE') LOOP
  5  	 EXECUTE IMMEDIATE 'DROP TABLE PRICE CASCADE CONSTRAINTS';
  6    END LOOP;
  7    FOR i IN (SELECT null
  8  		 FROM	user_sequences
  9  		 WHERE	sequence_name = 'PRICE_S1') LOOP
 10  	 EXECUTE IMMEDIATE 'DROP SEQUENCE PRICE_S1';
 11    END LOOP;
 12  END;
 13  /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- --------------------------------------------------
SQL> --  Step 1: Write the CREATE TABLE statement.
SQL> -- --------------------------------------------------
SQL> ---*****Addition by the student
SQL> CREATE TABLE price
  2  (	     price_id	      NUMBER PRIMARY KEY
  3  ,	     item_id	      NUMBER NOT NULL REFERENCES item (item_id)
  4  ,	     price_type       NUMBER REFERENCES common_lookup (common_lookup_id)
  5  ,	     active_flag      VARCHAR(1)
  6  ,	     start_date       DATE NOT NULL
  7  ,	     end_date	      DATE
  8  ,	     amount	      NUMBER NOT NULL
  9  ,	     created_by       NUMBER NOT NULL REFERENCES system_user (system_user_id)
 10  ,	     creation_date    DATE NOT NULL
 11  ,	     last_updated_by  NUMBER NOT NULL REFERENCES system_user (system_user_id)
 12  ,	     last_update_date DATE NOT NULL
 13  ,	     CONSTRAINT yn_price CHECK (active_flag IN ('Y', 'N'))
 14  );

Table created.

SQL> 
SQL> -- --------------------------------------------------
SQL> --  Step 2: Write the CREATE SEQUENCE statement.
SQL> -- --------------------------------------------------
SQL> -- Create sequence.
SQL> ---*****Addition by the student
SQL> CREATE SEQUENCE price_s1 START WITH 1001 INCREMENT BY 1;

Sequence created.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Objective #2: Verify the table structure.
SQL> -- ----------------------------------------------------------------------
SQL> SET NULL ''
SQL> COLUMN table_name	 FORMAT A14
SQL> COLUMN column_id	 FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type	 FORMAT A12
SQL> SELECT   table_name
  2  ,	      column_id
  3  ,	      column_name
  4  ,	      CASE
  5  		WHEN nullable = 'N' THEN 'NOT NULL'
  6  		ELSE ''
  7  	      END AS nullable
  8  ,	      CASE
  9  		WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
 10  		  data_type||'('||data_length||')'
 11  		ELSE
 12  		  data_type
 13  	      END AS data_type
 14  FROM     user_tab_columns
 15  WHERE    table_name = 'PRICE'
 16  ORDER BY 2;

                         Column                                                 
Table Name     COLUMN_ID Name                   NULLABLE DATA_TYPE              
-------------- --------- ---------------------- -------- ------------           
PRICE                  1 PRICE_ID               NOT NULL NUMBER(22)             
PRICE                  2 ITEM_ID                NOT NULL NUMBER(22)             
PRICE                  3 PRICE_TYPE                      NUMBER(22)             
PRICE                  4 ACTIVE_FLAG                     VARCHAR2(1)            
PRICE                  5 START_DATE             NOT NULL DATE                   
PRICE                  6 END_DATE                        DATE                   
PRICE                  7 AMOUNT                 NOT NULL NUMBER(22)             
PRICE                  8 CREATED_BY             NOT NULL NUMBER(22)             
PRICE                  9 CREATION_DATE          NOT NULL DATE                   
PRICE                 10 LAST_UPDATED_BY        NOT NULL NUMBER(22)             
PRICE                 11 LAST_UPDATE_DATE       NOT NULL DATE                   

11 rows selected.

SQL> -- ----------------------------------------------------------------------
SQL> --  Objective #3: Verify the table constraints.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN constraint_name   FORMAT A16
SQL> COLUMN search_condition  FORMAT A30
SQL> SELECT   uc.constraint_name
  2  ,	      uc.search_condition
  3  FROM     user_constraints uc INNER JOIN user_cons_columns ucc
  4  ON       uc.table_name = ucc.table_name
  5  AND      uc.constraint_name = ucc.constraint_name
  6  WHERE    uc.table_name = UPPER('price')
  7  AND      ucc.column_name = UPPER('active_flag')
  8  AND      uc.constraint_name = UPPER('yn_price')
  9  AND      uc.constraint_type = 'C';

Constraint Name  SEARCH_CONDITION                                               
---------------- ------------------------------                                 
YN_PRICE         active_flag IN ('Y', 'N')                                      

1 row selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #3 : Insert new data into the model.
SQL> -- ----------------------------------------------------------------------
SQL> -- ----------------------------------------------------------------------
SQL> --  Objective #3: Rename ITEM_RELEASE_DATE column to RELEASE_DATE column,
SQL> -- 	       insert three new DVD releases into the ITEM table,
SQL> -- 	       insert three new rows in the MEMBER, CONTACT, ADDRESS,
SQL> -- 	       STREET_ADDRESS, and TELEPHONE tables, and insert
SQL> -- 	       three new RENTAL and RENTAL_ITEM table rows.
SQL> -- ----------------------------------------------------------------------
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #3a: Rename ITEM_RELEASE_DATE Column.
SQL> -- ----------------------------------------------------------------------
SQL> ---*****Addition by the student
SQL> ALTER TABLE item
  2  RENAME COLUMN item_release_date TO release_date;

Table altered.

SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #3a: Verify the column name change.
SQL> -- ----------------------------------------------------------------------
SQL> SET NULL ''
SQL> COLUMN table_name	 FORMAT A14
SQL> COLUMN column_id	 FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type	 FORMAT A12
SQL> SELECT   table_name
  2  ,	      column_id
  3  ,	      column_name
  4  ,	      CASE
  5  		WHEN nullable = 'N' THEN 'NOT NULL'
  6  		ELSE ''
  7  	      END AS nullable
  8  ,	      data_type
  9  ||      '('||data_length||')' AS data_type
 10  FROM     user_tab_columns
 11  WHERE    TABLE_NAME = 'ITEM'
 12  ORDER BY 2;

                         Column                                                 
Table Name     COLUMN_ID Name                   NULLABLE DATA_TYPE              
-------------- --------- ---------------------- -------- ------------           
ITEM                   1 ITEM_ID                NOT NULL NUMBER(22)             
ITEM                   2 ITEM_BARCODE           NOT NULL VARCHAR2(14)           
ITEM                   3 ITEM_TYPE              NOT NULL NUMBER(22)             
ITEM                   4 ITEM_TITLE             NOT NULL VARCHAR2(60)           
ITEM                   5 ITEM_SUBTITLE                   VARCHAR2(60)           
ITEM                   6 ITEM_RATING            NOT NULL VARCHAR2(8)            
ITEM                   7 RELEASE_DATE           NOT NULL DATE(7)                
ITEM                   8 CREATED_BY             NOT NULL NUMBER(22)             
ITEM                   9 CREATION_DATE          NOT NULL DATE(7)                
ITEM                  10 LAST_UPDATED_BY        NOT NULL NUMBER(22)             
ITEM                  11 LAST_UPDATE_DATE       NOT NULL DATE(7)                

11 rows selected.

SQL> -- ----------------------------------------------------------------------
SQL> --  Step #3b: Insert three rows in the ITEM table.
SQL> -- ----------------------------------------------------------------------
SQL> ---*****Addition by the student
SQL> INSERT INTO item
  2  (	     item_id
  3  ,	     item_barcode
  4  ,	     item_type
  5  ,	     item_title
  6  ,	     item_subtitle
  7  ,	     item_rating
  8  ,	     release_date
  9  ,	     created_by
 10  ,	     creation_date
 11  ,	     last_updated_by
 12  ,	     last_update_date
 13  )
 14  VALUES
 15  (	     item_s1.NEXTVAL
 16  ,	     '786936161878'
 17  ,	     (SELECT common_lookup_id FROM common_lookup WHERE common_lookup_type = 'DVD_WIDE_SCREEN')
 18  ,	     'Tron'
 19  ,	     '20th Anniversary Collectors Edition'
 20  ,	     'PG'
 21  ,	     TRUNC(SYSDATE) - 15
 22  ,	     1002
 23  ,	     SYSDATE
 24  ,	     1002
 25  ,	     SYSDATE
 26  );

1 row created.

SQL> 
SQL> INSERT INTO item
  2  (	     item_id
  3  ,	     item_barcode
  4  ,	     item_type
  5  ,	     item_title
  6  ,	     item_subtitle
  7  ,	     item_rating
  8  ,	     release_date
  9  ,	     created_by
 10  ,	     creation_date
 11  ,	     last_updated_by
 12  ,	     last_update_date
 13  )
 14  VALUES
 15  (	     item_s1.NEXTVAL
 16  ,	     '4101-10422'
 17  ,	     (SELECT common_lookup_id FROM common_lookup WHERE common_lookup_type = 'DVD_WIDE_SCREEN')
 18  ,	     'Taken'
 19  ,	     ''
 20  ,	     'PG-13'
 21  ,	     TRUNC(SYSDATE) - 15
 22  ,	     1002
 23  ,	     SYSDATE
 24  ,	     1002
 25  ,	     SYSDATE
 26  );

1 row created.

SQL> 
SQL> INSERT INTO item
  2  (	     item_id
  3  ,	     item_barcode
  4  ,	     item_type
  5  ,	     item_title
  6  ,	     item_subtitle
  7  ,	     item_rating
  8  ,	     release_date
  9  ,	     created_by
 10  ,	     creation_date
 11  ,	     last_updated_by
 12  ,	     last_update_date
 13  )
 14  VALUES
 15  (	     item_s1.NEXTVAL
 16  ,	     '5918-1040'
 17  ,	     (SELECT common_lookup_id FROM common_lookup WHERE common_lookup_type = 'DVD_WIDE_SCREEN')
 18  ,	     'Finding Faith in Christ'
 19  ,	     'LDS'
 20  ,	     'G'
 21  ,	     TRUNC(SYSDATE) - 15
 22  ,	     1002
 23  ,	     SYSDATE
 24  ,	     1002
 25  ,	     SYSDATE
 26  );

1 row created.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #3b: Verify the column name change.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN item_title FORMAT A14
SQL> COLUMN today FORMAT A10
SQL> COLUMN release_date FORMAT A10 HEADING "RELEASE|DATE"
SQL> SELECT   i.item_title
  2  ,	      SYSDATE AS today
  3  ,	      i.release_date
  4  FROM     item i
  5  WHERE   (SYSDATE - i.release_date) < 31;

                          RELEASE                                               
Item Title     TODAY      DATE                                                  
-------------- ---------- ----------                                            
Tron           21-OCT-20  06-OCT-20                                             
Taken          21-OCT-20  06-OCT-20                                             
Finding Faith  21-OCT-20  06-OCT-20                                             
in Christ                                                                       
                                                                                

3 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #3c: Insert three new rows in the MEMBER, CONTACT, ADDRESS,
SQL> -- 	   STREET_ADDRESS, and TELEPHONE tables.
SQL> -- ----------------------------------------------------------------------
SQL> ---*****Addition by the student
SQL> 
SQL> --Harry
SQL> INSERT INTO MEMBER
  2  ( member_id
  3   , member_type
  4   , account_number
  5   , credit_card_number
  6   , credit_card_type
  7   , created_by
  8   , creation_date
  9   , last_updated_by
 10   , last_update_date )
 11   VALUES
 12   ( member_s1.NEXTVAL
 13   ,(SELECT	 common_lookup_id
 14  	FROM	 common_lookup
 15  	WHERE	 common_lookup_context = 'MEMBER'
 16  	AND	 common_lookup_type = 'GROUP')
 17   , 'US00011'
 18   , '6011 0000 0000 0078'
 19   , (SELECT common_lookup_id
 20  	 FROM	common_lookup
 21  	 WHERE	common_lookup_type = 'DISCOVER_CARD')
 22   , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO contact VALUES
  2  ( contact_s1.nextval
  3  , member_s1.currval
  4  ,(SELECT	common_lookup_id
  5    FROM	common_lookup
  6    WHERE	common_lookup_context = 'CONTACT'
  7    AND	common_lookup_type = 'CUSTOMER')
  8  ,'Harry','','Potter'
  9  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO address VALUES
  2  ( address_s1.nextval
  3  , contact_s1.currval
  4  ,(SELECT common_lookup_id
  5    FROM	common_lookup
  6    WHERE	common_lookup_type = 'HOME')
  7  ,'Provo','Utah','84604'
  8  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO street_address VALUES
  2  ( street_address_s1.nextval
  3  , address_s1.currval
  4  ,'900 E, 300 N'
  5  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO telephone VALUES
  2  ( telephone_s1.nextval
  3  , address_s1.currval
  4  , contact_s1.currval
  5  ,(SELECT	common_lookup_id
  6    FROM	common_lookup
  7    WHERE	common_lookup_type = 'HOME')
  8  ,'USA','801','333-3333'
  9  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> --Ginny
SQL> INSERT INTO MEMBER
  2  ( member_id
  3   , member_type
  4   , account_number
  5   , credit_card_number
  6   , credit_card_type
  7   , created_by
  8   , creation_date
  9   , last_updated_by
 10   , last_update_date )
 11   VALUES
 12   ( member_s1.NEXTVAL
 13   ,(SELECT	 common_lookup_id
 14  	FROM	 common_lookup
 15  	WHERE	 common_lookup_context = 'MEMBER'
 16  	AND	 common_lookup_type = 'GROUP')
 17   , 'US00011'
 18   , '6011 0000 0000 0078'
 19   , (SELECT common_lookup_id
 20  	 FROM	common_lookup
 21  	 WHERE	common_lookup_type = 'DISCOVER_CARD')
 22   , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO contact VALUES
  2  ( contact_s1.nextval
  3  , member_s1.currval
  4  ,(SELECT	common_lookup_id
  5    FROM	common_lookup
  6    WHERE	common_lookup_context = 'CONTACT'
  7    AND	common_lookup_type = 'CUSTOMER')
  8  ,'Ginny','','Potter'
  9  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO address VALUES
  2  ( address_s1.nextval
  3  , contact_s1.currval
  4  ,(SELECT common_lookup_id
  5    FROM	common_lookup
  6    WHERE	common_lookup_type = 'HOME')
  7  ,'Provo','Utah','84604'
  8  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO street_address VALUES
  2  ( street_address_s1.nextval
  3  , address_s1.currval
  4  ,'900 E, 300 N'
  5  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO telephone VALUES
  2  ( telephone_s1.nextval
  3  , address_s1.currval
  4  , contact_s1.currval
  5  ,(SELECT	common_lookup_id
  6    FROM	common_lookup
  7    WHERE	common_lookup_type = 'HOME')
  8  ,'USA','801','333-3333'
  9  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> --Lily
SQL> INSERT INTO MEMBER
  2  ( member_id
  3   , member_type
  4   , account_number
  5   , credit_card_number
  6   , credit_card_type
  7   , created_by
  8   , creation_date
  9   , last_updated_by
 10   , last_update_date )
 11   VALUES
 12   ( member_s1.NEXTVAL
 13   ,(SELECT	 common_lookup_id
 14  	FROM	 common_lookup
 15  	WHERE	 common_lookup_context = 'MEMBER'
 16  	AND	 common_lookup_type = 'GROUP')
 17   , 'US00011'
 18   , '6011 0000 0000 0078'
 19   , (SELECT common_lookup_id
 20  	 FROM	common_lookup
 21  	 WHERE	common_lookup_type = 'DISCOVER_CARD')
 22   , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO contact VALUES
  2  ( contact_s1.nextval
  3  , member_s1.currval
  4  ,(SELECT	common_lookup_id
  5    FROM	common_lookup
  6    WHERE	common_lookup_context = 'CONTACT'
  7    AND	common_lookup_type = 'CUSTOMER')
  8  ,'Lily','Luna','Potter'
  9  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO address VALUES
  2  ( address_s1.nextval
  3  , contact_s1.currval
  4  ,(SELECT common_lookup_id
  5    FROM	common_lookup
  6    WHERE	common_lookup_type = 'HOME')
  7  ,'Provo','Utah','84604'
  8  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO street_address VALUES
  2  ( street_address_s1.nextval
  3  , address_s1.currval
  4  ,'900 E, 300 N'
  5  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO telephone VALUES
  2  ( telephone_s1.nextval
  3  , address_s1.currval
  4  , contact_s1.currval
  5  ,(SELECT	common_lookup_id
  6    FROM	common_lookup
  7    WHERE	common_lookup_type = 'HOME')
  8  ,'USA','801','333-3333'
  9  , 1002, SYSDATE, 1002, SYSDATE);

1 row created.

SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #3c: Verify the three new CONTACTS and their related
SQL> -- 		   information set.
SQL> -- ----------------------------------------------------------------------
SQL> SET NULL ''
SQL> COLUMN full_name FORMAT A20
SQL> COLUMN city      FORMAT A10
SQL> COLUMN state     FORMAT A10
SQL> SELECT   c.last_name || ', ' || c.first_name AS full_name
  2  ,	      a.city
  3  ,	      a.state_province AS state
  4  FROM     member m INNER JOIN contact c
  5  ON       m.member_id = c.member_id INNER JOIN address a
  6  ON       c.contact_id = a.contact_id INNER JOIN street_address sa
  7  ON       a.address_id = sa.address_id INNER JOIN telephone t
  8  ON       c.contact_id = t.contact_id
  9  WHERE    c.last_name = 'Potter';

Name                                                                            
(Last, First MI)     City       STATE                                           
-------------------- ---------- ----------                                      
Potter, Harry        Provo      Utah                                            
Potter, Ginny        Provo      Utah                                            
Potter, Lily         Provo      Utah                                            

3 rows selected.

SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Step #3d: Insert three new RENTAL and RENTAL_ITEM table rows..
SQL> -- ----------------------------------------------------------------------
SQL> ---*****Addition by the student
SQL> -- Harry's Rentals
SQL> INSERT INTO rental
  2  (	     rental_id
  3  ,	     customer_id
  4  ,	     check_out_date
  5  ,	     return_date
  6  ,	     created_by
  7  ,	     creation_date
  8  ,	     last_updated_by
  9  ,	     last_update_date)
 10  VALUES
 11  (	     rental_s1.nextval
 12  ,	     (SELECT contact_id FROM contact WHERE last_name = 'Potter' AND first_name = 'Harry')
 13  ,	     TRUNC(SYSDATE)
 14  ,	     TRUNC(SYSDATE) + 1
 15  ,	     1002
 16  ,	     SYSDATE
 17  ,	     1002
 18  ,	     SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  (	     rental_item_id
  3  ,	     rental_id
  4  ,	     item_id
  5  ,	     created_by
  6  ,	     creation_date
  7  ,	     last_updated_by
  8  ,	     last_update_date
  9  ,	     rental_item_type
 10  ,	     rental_item_price
 11  )
 12  VALUES
 13  (	     rental_item_s1.nextval
 14  ,	     rental_s1.currval
 15  ,	     (SELECT   d.item_id FROM item d, common_lookup cl WHERE d.item_title = 'Star Wars I' AND d.item_subtitle = 'Phantom Menace' AND d.item_type = cl.common_lookup_id AND cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 16  ,	     1002
 17  ,	     SYSDATE
 18  ,	     1002
 19  ,	     SYSDATE
 20  ,	     NULL
 21  ,	     NULL);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  (	     rental_item_id
  3  ,	     rental_id
  4  ,	     item_id
  5  ,	     created_by
  6  ,	     creation_date
  7  ,	     last_updated_by
  8  ,	     last_update_date
  9  ,	     rental_item_type
 10  ,	     rental_item_price
 11  )
 12  VALUES
 13  (	     rental_item_s1.nextval
 14  ,	     rental_s1.currval
 15  ,	     (SELECT   d.item_id FROM item d, common_lookup cl WHERE d.item_title = 'Tron' AND d.item_subtitle = '20th Anniversary Collectors Edition' AND d.item_type = cl.common_lookup_id AND cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 16  ,	     1002
 17  ,	     SYSDATE
 18  ,	     1002
 19  ,	     SYSDATE
 20  ,	     NULL
 21  ,	     NULL);

1 row created.

SQL> 
SQL> -- Ginny's Rentals
SQL> INSERT INTO rental
  2  (	     rental_id
  3  ,	     customer_id
  4  ,	     check_out_date
  5  ,	     return_date
  6  ,	     created_by
  7  ,	     creation_date
  8  ,	     last_updated_by
  9  ,	     last_update_date)
 10  VALUES
 11  (	     rental_s1.nextval
 12  ,	     (SELECT contact_id FROM contact WHERE last_name = 'Potter' AND first_name = 'Ginny')
 13  ,	     TRUNC(SYSDATE)
 14  ,	     TRUNC(SYSDATE) + 3
 15  ,	     1002
 16  ,	     SYSDATE
 17  ,	     1002
 18  ,	     SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  (	     rental_item_id
  3  ,	     rental_id
  4  ,	     item_id
  5  ,	     created_by
  6  ,	     creation_date
  7  ,	     last_updated_by
  8  ,	     last_update_date
  9  ,	     rental_item_type
 10  ,	     rental_item_price
 11  )
 12  VALUES
 13  (	     rental_item_s1.nextval
 14  ,	     rental_s1.currval
 15  ,	     (SELECT d.item_id FROM item d, common_lookup cl WHERE d.item_title = 'Taken' AND d.item_type = cl.common_lookup_id AND cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 16  ,	     1002
 17  ,	     SYSDATE
 18  ,	     1002
 19  ,	     SYSDATE
 20  ,	     NULL
 21  ,	     NULL);

1 row created.

SQL> 
SQL> -- Lily's Rentals
SQL> INSERT INTO rental
  2  (	     rental_id
  3  ,	     customer_id
  4  ,	     check_out_date
  5  ,	     return_date
  6  ,	     created_by
  7  ,	     creation_date
  8  ,	     last_updated_by
  9  ,	     last_update_date)
 10  VALUES
 11  (	     rental_s1.nextval
 12  ,	     (SELECT contact_id FROM contact WHERE last_name = 'Potter' AND middle_name = 'Luna' AND first_name = 'Lily')
 13  ,	     TRUNC(SYSDATE)
 14  ,	     TRUNC(SYSDATE) + 5
 15  ,	     1002
 16  ,	     SYSDATE
 17  ,	     1002
 18  ,	     SYSDATE);

1 row created.

SQL> 
SQL> INSERT INTO rental_item
  2  (	     rental_item_id
  3  ,	     rental_id
  4  ,	     item_id
  5  ,	     created_by
  6  ,	     creation_date
  7  ,	     last_updated_by
  8  ,	     last_update_date
  9  ,	     rental_item_type
 10  ,	     rental_item_price
 11  )
 12  VALUES
 13  (	     rental_item_s1.nextval
 14  ,	     rental_s1.currval
 15  ,	     (SELECT d.item_id FROM item d, common_lookup cl WHERE d.item_title = 'Finding Faith in Christ' AND d.item_subtitle = 'LDS' AND d.item_type = cl.common_lookup_id AND cl.common_lookup_type = 'DVD_WIDE_SCREEN')
 16  ,	     1002
 17  ,	     SYSDATE
 18  ,	     1002
 19  ,	     SYSDATE
 20  ,	     NULL
 21  ,	     NULL);

1 row created.

SQL> 
SQL> 
SQL> 
SQL> -- ----------------------------------------------------------------------
SQL> --  Verification #3d: Verify the three new CONTACTS and their related
SQL> -- 		   information set.
SQL> -- ----------------------------------------------------------------------
SQL> COLUMN full_name	FORMAT A18
SQL> COLUMN rental_id	FORMAT 9999
SQL> COLUMN rental_days FORMAT A14
SQL> COLUMN rentals	FORMAT 9999
SQL> COLUMN items	FORMAT 9999
SQL> SELECT   c.last_name||', '||c.first_name||' '||c.middle_name AS full_name
  2  ,	      r.rental_id
  3  ,	     (r.return_date - r.check_out_date) || '-DAY RENTAL' AS rental_days
  4  ,	      COUNT(DISTINCT r.rental_id) AS rentals
  5  ,	      COUNT(ri.rental_item_id) AS items
  6  FROM     rental r INNER JOIN rental_item ri
  7  ON       r.rental_id = ri.rental_id INNER JOIN contact c
  8  ON       r.customer_id = c.contact_id
  9  WHERE   (SYSDATE - r.check_out_date) < 15
 10  AND      c.last_name = 'Potter'
 11  GROUP BY c.last_name||', '||c.first_name||' '||c.middle_name
 12  ,	      r.rental_id
 13  ,	     (r.return_date - r.check_out_date) || '-DAY RENTAL'
 14  ORDER BY 2;

Name                Rent                                                        
(Last, First MI)    ID # RENTAL_DAYS    RENTALS ITEMS                           
------------------ ----- -------------- ------- -----                           
Potter, Harry       1006 1-DAY RENTAL         1     2                           
Potter, Ginny       1007 3-DAY RENTAL         1     1                           
Potter, Lily Luna   1008 5-DAY RENTAL         1     1                           

3 rows selected.

SQL> 
SQL> SPOOL OFF
